! $Header: /afs/dev.mit.edu/source/repository/athena/etc/xdm/xlogin/Xlogin.presed,v 1.1 1990-10-25 21:59:03 mar Exp $

xlogin.wcChildren:		login, savershell, instructions
*title:				xlogin
*BorderWidth:			0

xlogin*top:			ChainTop
xlogin*bottom:			ChainTop

*login.wcClass:			formWidgetClass
*login.wcChildren:		eyes, version, \
				logo, welcome, host, clock, \
				userName, password, \
				register, options, menu, \
				name_input, pword_input

*savershell.wcConstructor:	XtCreateTransientShell
*savershell.geometry:		2000x2000+0+0
*savershell*Foreground:		white
*savershell*Background:		black

*instructions.wcConstructor:	XtCreateTransientShell
*instructions.wcChildren:	hitanykey
*instructions*left:		ChainLeft
*instructions*right:		ChainLeft

*hitanykey.wcClass:		formWidgetClass
*hitanykey.wcChildren:		version, logo, welcome, host, clock
*hitanykey*Foreground:		white
*hitanykey*Background:		black
*hitanykey*host.label:		Hit any key to start . . .




*optionShell.wcConstructor:	XtCreateTransientShell
*optionShell.wcChildren:	OptionsFrame
*OptionsFrame.wcClass:		formWidgetClass
*OptionsFrame.wcChildren:	optionsMessage, \
				UserDefault, defaultLabel, \
				SystemDefault, CustomLogin, \
				systemLabel, customLabel

! ------------------------------------------------------------
!		General Resources.
! ------------------------------------------------------------

xlogin.Geometry: 		580x305+205+75
*bitmapFilePath:		/usr/local/xlogin
*Background:			white
*Foreground:			black
*Command.translations:		#override \
				<Btn1Down>: set() \n\
				<Btn2Down>: set() \n\
				<Btn3Down>: set() \n\
				<Btn1Up>: notify() unset() \n\
				<Btn2Up>: notify() unset() \n\
				<Btn3Up>: notify() unset()
*Text.borderWidth:		3
*Command.font:			-adobe-new century schoolbook-bold-r-*-140-*
*Command.borderWidth:		1
*SimpleMenu*font:		-adobe-new century schoolbook-bold-r-*-140-*
*SimpleMenu*leftMargin:		25
*SimpleMenu*rightMargin:	10
*MenuButton.font:		-adobe-new century schoolbook-bold-r-*-140-*
*MenuButton.borderWidth:	1
*SimpleMenu*borderWidth:	1
*defaultDistance:		20
*Label*BorderColor:		white
*Font:				-adobe-new century schoolbook-bold-r-*-180-*


! ------------------------------------------------------------
! 		Greet Widget specifications.
! ------------------------------------------------------------


*logo.wcClass:			labelWidgetClass
*logo.bitmap:			owl
*logo*left:			ChainLeft
*logo*right:			ChainLeft

*eyes.wcClass:			labelWidgetClass
*eyes.bitmap:			owleyes0.xbm
*eyes.label:			owleyes0.xbm owleyes1.xbm \
				owleyes2.xbm owleyes3.xbm \
				owleyes4.xbm owleyes5.xbm
!  defaultDistance = 20, plus offset into owl bitmap of 55, 26
!  plus 4,2 for normal internal spacing.  geez!
*eyes.horizDistance:		79
*eyes.vertDistance:		48
!*eyes.borderWidth:		0
*eyes.internalWidth:		0
*eyes.internalHeight:		0
*eyes*left:			ChainLeft
*eyes*right:			ChainLeft

!  defaultDistance = 20, plus offset into owl bitmap of 32, 77
!  plus 4,2 for normal internal spacing.  Then play with the numbers
!  'til it looks ok...
*version.wcClass:		labelWidgetClass
*version.label:			7.2 
*version.horizDistance:		56
*version.vertDistance:		99
!*version.borderWidth:		0
*version.internalWidth:		0
*version.internalHeight:	0
*version.font:			-adobe-new century schoolbook-bold-r-*-120-*
*version*left:			ChainLeft
*version*right:			ChainLeft

*welcome.wcClass:		labelWidgetClass
*welcome.label: 		Welcome to Project Athena
!*welcome.width: 		340
*welcome.fromHoriz:		*logo
*welcome.horizDistance:		35
*welcome.vertDistance:		45
*welcome.font:			-adobe-new century schoolbook-bold-r-*-240-*

*host.wcClass:			labelWidgetClass
*host.fromHoriz:		*logo
*host.width:			350
*host.horizDistance:		35
*host.vertDistance:		-5
*host.fromVert:			*welcome
*host.label:			fries
*host.font:			-adobe-new century schoolbook-medium-r-*-180-*

*clock.wcClass:			clockWidgetClass
*clock.update:			1
*clock.analog:			False
*clock*font:			-adobe-new century schoolbook-medium-r-*-120-*
!*clock*borderWidth:		0
!*clock*width:			100
!*clock*height:			100
*clock.fromVert:		*host
*clock.fromHoriz:		*logo
*clock.horizDistance:		130
*clock.vertDistance:		-5

*userName.wcClass:		labelWidgetClass
*userName.fromVert:		*welcome
*userName.width:		110
*userName.vertDistance:		60
*userName.horizDistance:	100
*userName.label: 		Username:

*name_input.wcClass:		asciiTextWidgetClass
*name_input*length:		8
*name_input*string:		
*name_input*editType:		edit
*name_input*useStringInPlace:	TRUE
*name_input.fromVert:		*welcome
*name_input.fromHoriz:		*userName
*name_input.vertDistance:	60
*name_input.width:		180
*name_input.leftMargin:		4
*name_input.translations:	#replace \n\
	Ctrl<Key>a:	beginning-of-line() \n\
	Ctrl<Key>b:	backward-character() \n\
	Ctrl<Key>d:	delete-next-character() \n\
	Ctrl<Key>e:	end-of-line() \n\
	Ctrl<Key>f:	forward-character() \n\
	Ctrl<Key>h:	delete-previous-character() \n\
	Ctrl<Key>k:	kill-to-end-of-line() \n\
	Ctrl<Key>t:	transpose-characters() \n\
	Ctrl<Key>u:	beginning-of-line() kill-to-end-of-line() \n\
	Ctrl<Key>w:	beginning-of-line() kill-to-end-of-line() \n\
	:Meta<Key>d:	delete-next-word() \n\
	:Meta<Key>h:	delete-previous-word() \n\
	~Shift Meta<Key>Delete:		delete-previous-word() \n\
	Shift Meta<Key>Delete:		backward-kill-word() \n\
	~Shift Meta<Key>BackSpace:	delete-previous-word() \n\
	Shift Meta<Key>BackSpace:	backward-kill-word() \n\
	<Key>Right:	forward-character() \n\
	<Key>Left:	backward-character() \n\
	<Key>Delete:	delete-previous-character() \n\
	<Key>BackSpace:	delete-previous-character() \n\
	<FocusIn>:	focus-in() \n\
	<FocusOut>:	focus-out() \n\
	<Expose>:	setfocus(*name_input) \n\
	Ctrl<Key>p:	WcExitACT(3) \n\
	<Key>Return:	WcSetValueACT(this.displayCaret: FALSE) \
			WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*pword_input.borderColor: black) \
			setfocus(*pword_input) \n\
	<Key>KP_Enter:	WcSetValueACT(this.displayCaret: FALSE) \
			WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*pword_input.borderColor: black) \
			setfocus(*pword_input) \n\
	Ctrl<Key>m:	WcSetValueACT(this.displayCaret: FALSE) \
			WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*pword_input.borderColor: black) \
			setfocus(*pword_input) \n\
	None <Key>:	insert-char()

*password.wcClass:		labelWidgetClass
*password.fromVert:		*userName
*password.width:		110
*password.vertDistance:		5
*password.horizDistance:	100
*password*label: 		Password:

*pword_input.wcClass:		asciiTextWidgetClass
*pword_input.wcCallback:	WcSetValueCB(this.borderColor: white)
*pword_input*length:		20
*pword_input*string:		
*pword_input*editType:		edit
*pword_input*useStringInPlace:	TRUE
*pword_input.fromVert:		*name_input
*pword_input.fromHoriz:		*password
*pword_input.vertDistance:	5
*pword_input.Width:		180
*pword_input*echo:		False
*pword_input*Foreground:	white
*pword_input.translations:	#replace \n\
	Ctrl<Key>a:	beginning-of-line() \n\
	Ctrl<Key>b:	backward-character() \n\
	Ctrl<Key>d:	delete-next-character() \n\
	Ctrl<Key>e:	end-of-line() \n\
	Ctrl<Key>f:	forward-character() \n\
	Ctrl<Key>h:	delete-previous-character() \n\
	Ctrl<Key>k:	kill-to-end-of-line() \n\
	Ctrl<Key>t:	transpose-characters() \n\
	Ctrl<Key>u:	beginning-of-line() kill-to-end-of-line() \n\
	Ctrl<Key>w:	beginning-of-line() kill-to-end-of-line() \n\
	:Meta<Key>d:	delete-next-word() \n\
	:Meta<Key>h:	delete-previous-word() \n\
	~Shift Meta<Key>Delete:		delete-previous-word() \n\
	Shift Meta<Key>Delete:		backward-kill-word() \n\
	~Shift Meta<Key>BackSpace:	delete-previous-word() \n\
	Shift Meta<Key>BackSpace:	backward-kill-word() \n\
	<Key>Right:	forward-character() \n\
	<Key>Left:	backward-character() \n\
	<Key>Delete:	delete-previous-character() \n\
	<Key>BackSpace:	delete-previous-character() \n\
	<FocusIn>:	focus-in() \n\
	<FocusOut>:	focus-out() \n\
	Ctrl<Key>p:	WcExitACT(3) \n\
	<Key>Return:	WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*name_input.displayCaret: TRUE) \
			WcSetValueACT(*name_input.borderColor: black) \
			setfocus(*name_input) \n\
	<Key>KP_Enter:	WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*name_input.displayCaret: TRUE) \
			WcSetValueACT(*name_input.borderColor: black) \
			setfocus(*name_input) \n\
	Ctrl<Key>m:	WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*name_input.displayCaret: TRUE) \
			WcSetValueACT(*name_input.borderColor: black) \
			setfocus(*name_input) \n\
	None <Key>:	insert-char()

*register.wcClass:		commandWidgetClass
*register.vertDistance:		40
*register.horizDistance:	75
*register.label:		Register for an Account
*register.fromVert:		*password
*register.callback:	WcSystemCB(/bin/athena/attach -n -h -q -f register), \
			runCB(/mit/register/xregister)
!*register.callback:		WcSetValueCB(*eyes.bitmap: owleyes1.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes2.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes3.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes4.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes5.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes4.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes3.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes2.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes1.xbm), \
! WcSetValueCB(*register.callback: WcSetValueCB(*eyes.bitmap: owleyes0.xbm) \
! )))))))))


!*options.wcClass:		commandWidgetClass
*options.wcClass:		menuButtonWidgetClass
*options.vertDistance:		40
*options.horizDistance:		55
*options.label:			Other Options
*options.fromVert:		*password
*options.fromHoriz:		*register
*options.leftBitmap:		menu16
*options.leftMargin:		20
!*options.callback:		WcPopupGrabNoneCB(*optionShell)

*menu.wcClass:			simpleMenuWidgetClass
*menu.right:			ChainRight
!*menu.wcClass:			simpleMenuWidgetClass
*menu.wcManaged:		False
*menu.wcChildren:		menuEntry1, menuEntry2, menuEntry3, \
				menuEntry4, menuLine, menuEntry5, \
				menuEntry6, menuEntry7, menuEntry8, \
				menuLine, \
				menuEntry9, menuEntry10, menuEntry11

*menuLine.wcClass:		smeLineObjectClass
*menuEntry1.wcClass:		smeBSBObjectClass
*menuEntry2.wcClass:		smeBSBObjectClass
*menuEntry3.wcClass:		smeBSBObjectClass
*menuEntry4.wcClass:		smeBSBObjectClass
*menuEntry5.wcClass:		smeBSBObjectClass
*menuEntry6.wcClass:		smeBSBObjectClass
*menuEntry7.wcClass:		smeBSBObjectClass
*menuEntry8.wcClass:		smeBSBObjectClass
*menuEntry9.wcClass:		smeBSBObjectClass
*menuEntry10.wcClass:		smeBSBObjectClass
*menuEntry11.wcClass:		smeBSBObjectClass

*menuEntry1*leftMargin:		25
*menuEntry2*leftMargin:		25
*menuEntry3*leftMargin:		25
*menuEntry1.leftBitmap:		radio_on
*menuEntry2.leftBitmap:		radio_off
*menuEntry3.leftBitmap:		radio_off

*menuEntry1.label:		User default login session
*menuEntry2.label:		Standard system (no customizations)
*menuEntry3.label:		Custom login
*menuEntry4.label:		Start Over
*menuEntry5.label:		On-Line Help
*menuEntry5.callback:		runCB(/usr/athena/olh)
*menuEntry6.label:		TechInfo
*menuEntry7.label:		XCluster
*menuEntry7.callback:		runCB(/usr/athena/xcluster)
*menuEntry8.label:		Login to MITVMA
*menuEntry8.callback:		runCB(/mit/xdm/src/conf/mitvma)
*menuEntry9.label:		Shutdown X, login on console
*menuEntry9.callback:		WcExitCB(3)
*menuEntry10.label:		Show machine configuration
*menuEntry11.label:		Shutdown machine

*menuEntry1.callback:	WcSetValueCB(*menuEntry1.leftBitmap: radio_on), \
			WcSetValueCB(*menuEntry2.leftBitmap: radio_off), \
			WcSetValueCB(*menuEntry3.leftBitmap: radio_off)
*menuEntry2.callback:	WcSetValueCB(*menuEntry1.leftBitmap: radio_off), \
			WcSetValueCB(*menuEntry2.leftBitmap: radio_on), \
			WcSetValueCB(*menuEntry3.leftBitmap: radio_off)
*menuEntry3.callback:	WcSetValueCB(*menuEntry1.leftBitmap: radio_off), \
			WcSetValueCB(*menuEntry2.leftBitmap: radio_off), \
			WcSetValueCB(*menuEntry3.leftBitmap: radio_on)


! ------------------------------------------------------------
! 		Option Shell Widget specifications.
! ------------------------------------------------------------


*optionShell.x:			205
*optionShell.y:			410
*optionShell.width: 		580
*optionShell*Toggle.font:	-adobe-new century schoolbook-medium-r-*-180-*
*optionShell*Label.font:	-adobe-new century schoolbook-bold-r-*-140-*

!*optionShell*Label.borderWidth:	0
*optionShell*Toggle.width:	120
*optionShell*defaultDistance:	15

!*optionsMessage.wcClass:	asciiTextWidgetClass
*optionsMessage.wcClass:	labelWidgetClass
!*optionsMessage.type:		string
*optionsMessage.label:		Select the option you want, move the mouse to the top window, then\nenter your user name and password
!*optionsMessage.wrap:		word
!*optionsMessage.resize:		height
!*optionsMessage.useStringInPlace:	TRUE
!*optionsMessage.width:		537
!*optionsMessage.cursor:		X_cursor
*optionsMessage.horizDistance:	29
*optionsMessage.font:		-adobe-new century schoolbook-bold-r-*-140-*
!*optionsMessage.borderWidth:	0
!*optionsMessage.displayCaret:	false

*UserDefault.wcClass:		toggleWidgetClass
*UserDefault.label:		DEFAULT
*UserDefault.horizDistance:	50
*UserDefault.fromVert:		*optionsMessage
*UserDefault.state:		true

*defaultLabel.wcClass:		labelWidgetClass
*defaultLabel.label:		Run your usual login session
*defaultLabel.fromVert:		*optionsMessage
*defaultLabel.fromHoriz:	*UserDefault

*SystemDefault.wcClass:		toggleWidgetClass
*SystemDefault.label:		SYSTEM
*SystemDefault.horizDistance:	50
*SystemDefault.fromVert:	*UserDefault
*SystemDefault.radioGroup:	*UserDefault

*systemLabel.wcClass:		labelWidgetClass
*systemLabel.label:		Run session ignoring your customization files
*systemLabel.fromVert:		*UserDefault
*systemLabel.fromHoriz:		*UserDefault

*CustomLogin.wcClass:		toggleWidgetClass
*CustomLogin.label:		CUSTOM
*CustomLogin.horizDistance:	50
*CustomLogin.fromVert:		*SystemDefault
*CustomLogin.radioGroup:	*UserDefault

*customLabel.wcClass:		labelWidgetClass
*customLabel.label:		Run session based on alternate session file
*customLabel.fromVert:		*SystemDefault
*customLabel.fromHoriz:		*UserDefault


!*optionShell*OptionsFrame.borderWidth:	0

*optionShell*Toggle.translations:	#override \
					<Btn1Down>,<Btn1Up>: set() notify() \n\
					<Btn2Down>,<Btn2Up>: set() notify() \n\
					<Btn3Down>,<Btn3Up>: set() notify()
