! $Header: /afs/dev.mit.edu/source/repository/athena/etc/xdm/xlogin/Xlogin.presed,v 1.3 1990-11-01 18:44:57 mar Exp $

xlogin.wcChildren:		login, savershell, instructions, \
				warningShell, getSessionShell
*title:				xlogin
*saveTimeout:			60

xlogin*top:			ChainTop
xlogin*bottom:			ChainTop

*login.wcClass:			formWidgetClass
*login.wcChildren:		eyes, version, \
				logo, welcome, host, clock, \
				userName, password, \
				name_input, pword_input, \
				selection, \
				loptions, ooptions, lmenu, omenu, \
				register

*savershell.wcConstructor:	XtCreateTransientShell
*savershell.geometry:		2000x2000+0+0
*savershell*Foreground:		white
*savershell*Background:		black

*instructions.wcConstructor:	XtCreateTransientShell
*instructions.wcChildren:	hitanykey
*instructions*left:		ChainLeft
*instructions*right:		ChainLeft

*hitanykey.wcClass:		formWidgetClass
*hitanykey.wcChildren:		version, logo, welcome, host, clock, mesg
*hitanykey*Foreground:		white
*hitanykey*Background:		black

*warningShell.wcConstructor:	XtCreateTransientShell
*warningShell.wcChildren:	warning

*getSessionShell.wcConstructor:	XtCreateTransientShell
*getSessionShell.wcChildren:	getsession


! ------------------------------------------------------------
!		General Resources.
! ------------------------------------------------------------

xlogin.Geometry: 		580x305+205+75
*bitmapFilePath:		/mit/xdm/src/xlogin:/usr/lib/X11/bitmaps
*BorderWidth:			0
*Background:			white
*Foreground:			black
*Command.translations:		#override \
				<Btn1Down>: set() \n\
				<Btn2Down>: set() \n\
				<Btn3Down>: set() \n\
				<Btn1Up>: notify() unset() \n\
				<Btn2Up>: notify() unset() \n\
				<Btn3Up>: notify() unset()
*Text.borderWidth:		3
*Command.borderWidth:		1
*SimpleMenu*leftMargin:		25
*SimpleMenu*rightMargin:	10
*MenuButton.borderWidth:	1
*SimpleMenu*borderWidth:	1
*defaultDistance:		20
*Label*BorderColor:		white
*Font:				-adobe-new century schoolbook-bold-r-*-140-*


! ------------------------------------------------------------
! 		Greet Widget specifications.
! ------------------------------------------------------------


*logo.wcClass:			labelWidgetClass
*logo.bitmap:			owl
*logo*left:			ChainLeft
*logo*right:			ChainLeft

*eyes.wcClass:			labelWidgetClass
*eyes.bitmap:			/mit/xdm/src/xlogin/owleyes0.xbm
*eyes.label:			/mit/xdm/src/xlogin/owleyes0.xbm \
				/mit/xdm/src/xlogin/owleyes1.xbm \
				/mit/xdm/src/xlogin/owleyes2.xbm \
				/mit/xdm/src/xlogin/owleyes3.xbm \
				/mit/xdm/src/xlogin/owleyes4.xbm \
				/mit/xdm/src/xlogin/owleyes5.xbm
!  defaultDistance = 20, plus offset into owl bitmap of 55, 26
!  plus 4,2 for normal internal spacing.  geez!
*eyes.horizDistance:		79
*eyes.vertDistance:		48
*eyes.internalWidth:		0
*eyes.internalHeight:		0
*eyes*left:			ChainLeft
*eyes*right:			ChainLeft

!  defaultDistance = 20, plus offset into owl bitmap of 32, 77
!  plus 4,2 for normal internal spacing.  Then play with the numbers
!  'til it looks ok...
*version.wcClass:		labelWidgetClass
*version.label:			7.2 
*version.horizDistance:		56
*version.vertDistance:		99
*version.internalWidth:		0
*version.internalHeight:	0
*version.font:			-adobe-new century schoolbook-bold-r-*-120-*
*version*left:			ChainLeft
*version*right:			ChainLeft

*welcome.wcClass:		labelWidgetClass
*welcome.label: 		Welcome to Project Athena
!*welcome.width: 		340
*welcome.fromHoriz:		*logo
*welcome.horizDistance:		35
*welcome.vertDistance:		45
*welcome.font:			-adobe-new century schoolbook-bold-r-*-240-*

*host.wcClass:			labelWidgetClass
*host.label:			hostname.mit.edu
*host.width:			340
*host.fromHoriz:		*logo
*host.horizDistance:		35
*host.vertDistance:		-5
*host.fromVert:			*welcome
*host.font:			-adobe-new century schoolbook-bold-r-*-180-*
*host.resize:			False

*clock.wcClass:			clockWidgetClass
*clock.update:			1
*clock.analog:			False
*clock*font:			-adobe-new century schoolbook-medium-r-*-120-*
*clock.fromVert:		*host
*clock.fromHoriz:		*logo
*clock.horizDistance:		130
*clock.vertDistance:		-5

*mesg.wcClass:			labelWidgetClass
*mesg.fromHoriz:		*logo
*mesg.width:			340
*mesg.horizDistance:		35
*mesg.vertDistance:		20
*mesg.fromVert:			*clock
*mesg.font:			-adobe-new century schoolbook-bold-r-*-240-*
*mesg.label:			Press any key to start . . .

*userName.wcClass:		labelWidgetClass
*userName.fromVert:		*welcome
*userName.width:		110
*userName.vertDistance:		60
*userName.horizDistance:	100
*userName.font:			-adobe-new century schoolbook-bold-r-*-180-*
*userName.label: 		Username:

*name_input.wcClass:		asciiTextWidgetClass
*name_input*length:		8
*name_input*string:		
*name_input*font:		-adobe-new century schoolbook-bold-r-*-180-*
*name_input*editType:		edit
*name_input*useStringInPlace:	TRUE
*name_input.fromVert:		*welcome
*name_input.fromHoriz:		*userName
*name_input.vertDistance:	60
*name_input.width:		180
*name_input.leftMargin:		4
*name_input.translations:	#replace \n\
	Ctrl<Key>a:	beginning-of-line() \n\
	Ctrl<Key>b:	backward-character() \n\
	Ctrl<Key>d:	delete-next-character() \n\
	Ctrl<Key>e:	end-of-line() \n\
	Ctrl<Key>f:	forward-character() \n\
	Ctrl<Key>h:	delete-previous-character() \n\
	Ctrl<Key>k:	kill-to-end-of-line() \n\
	Ctrl<Key>t:	transpose-characters() \n\
	Ctrl<Key>u:	beginning-of-line() kill-to-end-of-line() \n\
	Ctrl<Key>w:	beginning-of-line() kill-to-end-of-line() \n\
	:Meta<Key>d:	delete-next-word() \n\
	:Meta<Key>h:	delete-previous-word() \n\
	~Shift Meta<Key>Delete:		delete-previous-word() \n\
	Shift Meta<Key>Delete:		backward-kill-word() \n\
	~Shift Meta<Key>BackSpace:	delete-previous-word() \n\
	Shift Meta<Key>BackSpace:	backward-kill-word() \n\
	<Key>Right:	forward-character() \n\
	<Key>Left:	backward-character() \n\
	<Key>Delete:	delete-previous-character() \n\
	<Key>BackSpace:	delete-previous-character() \n\
	<FocusIn>:	focus-in() \n\
	<FocusOut>:	focus-out() \n\
	Ctrl<Key>p:	WcExitACT(3) \n\
	<Key>Return:	WcSetValueACT(this.displayCaret: FALSE) \
			WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*pword_input.borderColor: black) \
			idleReset() \
			setfocus(*pword_input) \n\
	<Key>KP_Enter:	WcSetValueACT(this.displayCaret: FALSE) \
			WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*pword_input.borderColor: black) \
			idleReset() \
			setfocus(*pword_input) \n\
	Ctrl<Key>m:	WcSetValueACT(this.displayCaret: FALSE) \
			WcSetValueACT(this.borderColor: white) \
			WcSetValueACT(*pword_input.borderColor: black) \
			idleReset() \
			setfocus(*pword_input) \n\
	None <Key>:	insert-char() \
			idleReset() \n\
	Shift <Key>:	insert-char() \
			idleReset()

*password.wcClass:		labelWidgetClass
*password.fromVert:		*userName
*password.width:		110
*password.vertDistance:		5
*password.horizDistance:	100
*password.font:			-adobe-new century schoolbook-bold-r-*-180-*
*password*label: 		Password:

*pword_input.wcClass:		asciiTextWidgetClass
*pword_input.wcCallback:	WcSetValueCB(this.borderColor: white)
*pword_input*length:		20
*pword_input*string:		
*pword_input*font:		-adobe-new century schoolbook-bold-r-*-180-*
*pword_input*editType:		edit
*pword_input*useStringInPlace:	TRUE
*pword_input.fromVert:		*name_input
*pword_input.fromHoriz:		*password
*pword_input.vertDistance:	5
*pword_input.Width:		180
*pword_input*echo:		False
*pword_input*Foreground:	white
*pword_input.translations:	#replace \n\
	Ctrl<Key>a:	beginning-of-line() \n\
	Ctrl<Key>b:	backward-character() \n\
	Ctrl<Key>d:	delete-next-character() \n\
	Ctrl<Key>e:	end-of-line() \n\
	Ctrl<Key>f:	forward-character() \n\
	Ctrl<Key>h:	delete-previous-character() \n\
	Ctrl<Key>k:	kill-to-end-of-line() \n\
	Ctrl<Key>t:	transpose-characters() \n\
	Ctrl<Key>u:	beginning-of-line() kill-to-end-of-line() \n\
	Ctrl<Key>w:	beginning-of-line() kill-to-end-of-line() \n\
	:Meta<Key>d:	delete-next-word() \n\
	:Meta<Key>h:	delete-previous-word() \n\
	~Shift Meta<Key>Delete:		delete-previous-word() \n\
	Shift Meta<Key>Delete:		backward-kill-word() \n\
	~Shift Meta<Key>BackSpace:	delete-previous-word() \n\
	Shift Meta<Key>BackSpace:	backward-kill-word() \n\
	<Key>Right:	forward-character() \n\
	<Key>Left:	backward-character() \n\
	<Key>Delete:	delete-previous-character() \n\
	<Key>BackSpace:	delete-previous-character() \n\
	<FocusIn>:	focus-in() \n\
	<FocusOut>:	focus-out() \n\
	Ctrl<Key>p:	WcExitACT(3) \n\
	<Key>Return:	login() \n\
	<Key>KP_Enter:	login() \n\
	Ctrl<Key>m:	login() \n\
	None <Key>:	insert-char() \
			idleReset() \n\
	Shift <Key>:	insert-char() \
			idleReset()

!	<Key>Return:	WcSetValueACT(this.borderColor: white) \
!			WcSetValueACT(*name_input.displayCaret: TRUE) \
!			WcSetValueACT(*name_input.borderColor: black) \
!			idleReset() \
!			setfocus(*name_input) \n\
!	<Key>KP_Enter:	WcSetValueACT(this.borderColor: white) \
!			WcSetValueACT(*name_input.displayCaret: TRUE) \
!			WcSetValueACT(*name_input.borderColor: black) \
!			idleReset() \
!			setfocus(*name_input) \n\
!	Ctrl<Key>m:	WcSetValueACT(this.borderColor: white) \
!			WcSetValueACT(*name_input.displayCaret: TRUE) \
!			WcSetValueACT(*name_input.borderColor: black) \
!			idleReset() \
!			setfocus(*name_input) \n\

*selection.wcClass:		labelWidgetClass
*selection.label:		
*selection.width:		470
*selection.horizDistance:	35
*selection.fromVert:		*password
*selection.vertDistance:	5
*selection.font:		-adobe-new century schoolbook-bold-r-*-180-*

*loptions.wcClass:		menuButtonWidgetClass
*loptions.vertDistance:		40
*loptions.horizDistance:	100
*loptions.label:		Login Options
*loptions.fromVert:		*password
*loptions.leftBitmap:		menu16
*loptions.leftMargin:		20
*loptions.menuName:		lmenu

*ooptions.wcClass:		menuButtonWidgetClass
*ooptions.vertDistance:		40
*ooptions.horizDistance:	70
*ooptions.label:		Other Options
*ooptions.fromVert:		*password
*ooptions.fromHoriz:		*loptions
*ooptions.leftBitmap:		menu16
*ooptions.leftMargin:		20
*ooptions.menuName:		omenu

*SimpleMenu*popupCallback:	idleResetCB()
*SimpleMenu*popdownCallback:	idleResetCB()

*lmenu.wcClass:			simpleMenuWidgetClass
*lmenu.right:			ChainRight
*lmenu.wcManaged:		False
*lmenu.wcChildren:		lmenuEntry1, lmenuEntry2, lmenuEntry3, \
				lmenuEntry4, lmenuEntry5

*lmenuEntry1.wcClass:		smeBSBObjectClass
*lmenuEntry2.wcClass:		smeBSBObjectClass
*lmenuEntry3.wcClass:		smeBSBObjectClass
*lmenuEntry4.wcClass:		smeBSBObjectClass
*lmenuEntry5.wcClass:		smeBSBObjectClass

*lmenuEntry1*leftMargin:	25
*lmenuEntry2*leftMargin:	25
*lmenuEntry3*leftMargin:	25
*lmenuEntry4*leftMargin:	25
*lmenuEntry1.leftBitmap:	check
*lmenuEntry2.leftBitmap:	white
*lmenuEntry3.leftBitmap:	white
*lmenuEntry4.leftBitmap:	white

*lmenuEntry1.label:		Your usual login session
*lmenuEntry2.label:		Ignore your customizations
*lmenuEntry3.label:		Quick login
*lmenuEntry4.label:		Specify special login
*lmenuEntry5.label:		Start Over

*lmenuEntry1.callback:	WcSetValueCB(*lmenuEntry1.leftBitmap: check), \
			WcSetValueCB(*lmenuEntry2.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry3.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry4.leftBitmap: white), \
			WcSetValueCB(*selection.label: )
*lmenuEntry2.callback:	WcSetValueCB(*lmenuEntry1.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry2.leftBitmap: check), \
			WcSetValueCB(*lmenuEntry3.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry4.leftBitmap: white), \
			WcSetValueCB(*selection.label: Ignore customizations selected)
*lmenuEntry3.callback:	WcSetValueCB(*lmenuEntry1.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry2.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry3.leftBitmap: check), \
			WcSetValueCB(*lmenuEntry4.leftBitmap: white), \
			WcSetValueCB(*selection.label: Quick login session selected)
*lmenuEntry4.callback:	WcSetValueCB(*lmenuEntry1.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry2.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry3.leftBitmap: white), \
			WcSetValueCB(*lmenuEntry4.leftBitmap: check), \
			WcSetValueCB(*selection.label: Special login session selected), \
			WcPopupGrabCB(*getSessionShell), \
			setfocusCB(*getsession*value)
*lmenuEntry5.callback:	resetCB()

*omenu.wcClass:			simpleMenuWidgetClass
*omenu.right:			ChainRight
*omenu.wcManaged:		False
*omenu.wcChildren:		omenuEntry1, omenuEntry2, omenuEntry3, \
				omenuEntry4, omenuEntry5, omenuEntry6, \
				menuLine, \
				omenuEntry7, omenuEntry8, omenuEntry9, \
				omenuEntry10

*menuLine.wcClass:		smeLineObjectClass
*omenuEntry1.wcClass:		smeBSBObjectClass
*omenuEntry2.wcClass:		smeBSBObjectClass
*omenuEntry3.wcClass:		smeBSBObjectClass
*omenuEntry4.wcClass:		smeBSBObjectClass
*omenuEntry5.wcClass:		smeBSBObjectClass
*omenuEntry6.wcClass:		smeBSBObjectClass
*omenuEntry7.wcClass:		smeBSBObjectClass
*omenuEntry8.wcClass:		smeBSBObjectClass
*omenuEntry9.wcClass:		smeBSBObjectClass
*omenuEntry10.wcClass:		smeBSBObjectClass

*omenuEntry1.label:		Information
*omenuEntry1.justify:		center
!*omenuEntry1.sensitive:		False
*omenuEntry2.label:		Athena On-Line Help (olh)
*omenuEntry2.callback:		runCB(/mit/xdm/src/conf/olh)
*omenuEntry3.label:		Map/Status of Athena Clusters (xcluster)
!*omenuEntry3.callback:		runCB(/mit/xdm/src/conf/xcluster)
*omenuEntry4.label:		MIT On-Line Information (TechInfo)
*omenuEntry4.callback:		runCB(/mit/xdm/src/conf/techinfo)
*omenuEntry5.label:		MIT Library Card Catalog (Barton)
*omenuEntry5.callback:		runCB(/mit/xdm/src/conf/barton)
*omenuEntry6.label:		Display Workstation Configuration
*omenuEntry6.callback:		runCB(/mit/xdm/src/conf/machine)
*omenuEntry7.label:		Other
*omenuEntry7.justify:		center
!*omenuEntry7.sensitive:		False
*omenuEntry8.label:		Login to MITVMA
*omenuEntry8.callback:		runCB(/mit/xdm/src/conf/mitvma)
*omenuEntry9.label:		Update Mail Info
*omenuEntry9.callback:		runCB(/mit/xdm/src/conf/moira)
*omenuEntry10.label:		Shutdown Window System
*omenuEntry10.callback:		WcExitCB(3)

*register.wcClass:		commandWidgetClass
*register.vertDistance:		10
*register.horizDistance:	175
*register.label:		Register for an Account
*register.fromVert:		*loptions
*register.callback:		runCB(/mit/xdm/src/conf/register)
!*register.callback:	WcTraceCB(register)


! ------------------------------------------------------------
! 		Option Shell Widget specifications.
! ------------------------------------------------------------

*getSessionShell.geometry:	+200+400

*getsession.wcClass:		dialogWidgetClass
*getsession.icon:		question
*getsession.label:		Please enter the name of a shell script or program:
*getsession.label.font:		-adobe-new century schoolbook-bold-r-*-180-*
*getsession.wcChildren:		doit, abort

*getsession*value.borderWidth:		2
*getsession*value.horizDistance:	100
*getsession*value.width:		300
*getsession*value.length:		128
*getsession*value.useStringInPlace:	True
*getsession*value:			
*getsession*value*resize:		False
*getsession*value.translations:	#replace \n\
	Ctrl<Key>a:	beginning-of-line() \n\
	Ctrl<Key>b:	backward-character() \n\
	Ctrl<Key>d:	delete-next-character() \n\
	Ctrl<Key>e:	end-of-line() \n\
	Ctrl<Key>f:	forward-character() \n\
	Ctrl<Key>h:	delete-previous-character() \n\
	Ctrl<Key>k:	kill-to-end-of-line() \n\
	Ctrl<Key>t:	transpose-characters() \n\
	Ctrl<Key>u:	beginning-of-line() kill-to-end-of-line() \n\
	Ctrl<Key>w:	beginning-of-line() kill-to-end-of-line() \n\
	:Meta<Key>d:	delete-next-word() \n\
	:Meta<Key>h:	delete-previous-word() \n\
	~Shift Meta<Key>Delete:		delete-previous-word() \n\
	Shift Meta<Key>Delete:		backward-kill-word() \n\
	~Shift Meta<Key>BackSpace:	delete-previous-word() \n\
	Shift Meta<Key>BackSpace:	backward-kill-word() \n\
	<Key>Right:	forward-character() \n\
	<Key>Left:	backward-character() \n\
	<Key>Delete:	delete-previous-character() \n\
	<Key>BackSpace:	delete-previous-character() \n\
	<FocusIn>:	focus-in() \n\
	<FocusOut>:	focus-out() \n\
	Ctrl<Key>p:	WcExitACT(3) \n\
	<Key>Return:	WcPopdownACT(*getSessionShell) \
			setfocus(*name_input) \
			idleReset() \n\
	<Key>KP_Enter:	WcPopdownACT(*getSessionShell) \
			setfocus(*name_input) \
			idleReset() \n\
	Ctrl<Key>m:	WcPopdownACT(*getSessionShell) \
			setfocus(*name_input) \
			idleReset() \n\
	None <Key>:	insert-char() \
			idleReset() \n\
	Shift <Key>:	insert-char() \
			idleReset()

*doit.wcClass:			commandWidgetClass
*doit.label:			OK
*doit.callback:			WcPopdownCB(*getSessionShell), \
				setfocusCB(*name_input)
*abort.wcClass:			commandWidgetClass
*abort.fromHoriz:		*doit
*abort.label			abort
*abort.callback:		WcPopdownCB(*getSessionShell), \
				setfocusCB(*name_input), \
				WcSetValueCB(*lmenuEntry1.leftBitmap: check), \
				WcSetValueCB(*lmenuEntry4.leftBitmap: white), \
				WcSetValueCB(*selection.label: )


*warningShell.geometry:		400x300+285+205
*warningShell.borderWidth:	3
*warningShell.borderColor:	black

*warning.wcClass:		dialogWidgetClass
*warning.icon:			warning
*warning.label:			Login Failed
*warning.label.font:		-adobe-new century schoolbook-bold-r-*-240-*
*warning.label.width:		200
*warning.value:			this will be replaced before it is used
*warning.wcChildren:		continue

*warning*value.width:		380
*warning*value.height:		160
*warning*value.borderWidth:	0
*warning*value.autoFill:	True
*warning*value.resize:		False
*warning*value.displayCaret:	False
*warning*value.translations:	#replace \n\
	Ctrl<Key>p:	WcExitACT(3) \n\
	<Key>Return:	WcPopdownACT(*warningShell) \
			reset() \n\
	<Key>KP_Enter:	WcPopdownACT(*warningShell) \
			reset() \n\
	Ctrl<Key>m:	WcPopdownACT(*warningShell) \
			reset()

*continue.wcClass:		commandWidgetClass
*continue.callback:		WcPopdownCB(*warningShell), \
				resetCB()

