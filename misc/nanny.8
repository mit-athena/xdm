.TH NANNY 8 "1 June 1996"
.ds ]W MIT Athena
.SH NAME
nanny \- multipurpose process watcher and login manager
.SH SYNOPSIS
.nf
nanny [[-]xup | [-]xdown | [-]die | ping]
	[VAR ... ] [VAR=VALUE ... ]
.fi
.SH DESCRIPTION
\fInanny\fR takes care of the \fIconsole\fR(8) program, manages
X and console logins, and mediates the login procedure between
\fIxdm\fR(1), \fIxlogin\fR(8) and \fIelmer\fR(8).

It shuts \fIconsole\fR down when the X server exits, starts it when
the X server starts, and restarts it when it exits due to the user
running \fIconfig_console\fR(1). It also takes care of directing the
output of /dev/console into \fIconsole\fR.

\fInanny\fR is not ordinarily run by the user. It is normally started
when the system boots, and called indirectly from \fIxdm\fR, either
from /var/X11/xdm/Xlogin just before \fIxlogin\fR(8) is invoked, or
from /var/X11/xdm/Xreset when the X server is about to be shut down.

Whenever \fInanny\fR restarts \fIconsole\fR, it regrabs the output of
/dev/console. This can be useful if the user has grabbed the console
for other purposes; he can run \fIconfig_console\fR afterwards to get
console output back to the console window.

This documentation exists primarily for developers needing to do
debugging or development with \fInanny\fR, as a substitute for trying
to reverse engineer basic operation information from source code.
This interface is subject to change, so nothing other than the
necessary system software should depend on it.
.SH OPTIONS
When run, \fInanny\fR checks to see if there is already a nanny
running by attempting to communicate with it via a socket in /var/athena. If
there is a response, \fInanny\fR just sends it the appropriate
commands. If not, the invoked \fInanny\fR forks and the child becomes
the running \fInanny\fR. Each of the following options is equivalent
to sending some set of variable assignments (see VARIABLES, below),
except for ping. If an optional ``-'' is included before the option,
output to stdout is suppressed. This is needed for some invocations by
\fIxdm\fR which may wish to interpret that output stream.
.TP 8
.B [-]xup
This option is used to inform \fInanny\fR that the X server has just
come up, and it should perform appropriate actions, such as firing
up the \fIconsole\fR.
.TP 8
.B [-]xdown
This option is used to inform \fInanny\fR that the X server is about
to go down, and it should perform appropriate actions, such as
shutting down the \fIconsole\fR.
.TP 8
.B [-]die
This option is used to kill \fInanny\fR. \fInanny\fR will shut down
its children, clean up its files, and exit.
.TP 8
.B ping
This option is used to check to see of \fInanny\fR is running, without
starting one if not. It is the same as doing a query of the variable
MODE, except that MODE=DEAD will be returned and the nanny invocation
will not fork if no nanny is running.
.SH VARIABLES
\fInanny\fR variables may be either set or queried simply on the
command line. ``nanny VAR1 VAR2'' will return the values of both VAR1
and VAR2. ``nanny VAR1=value VAR2'' will attempt to assign the value
``value'' to VAR1 and return the result of that attempt, and then
return the value of VAR2. Due to implementation restrictions, the same
variable may not be accessed more than once in the same transaction.
All interaction with \fInanny\fR takes place via setting and querying
variables.
.TP 8
.B MODE
The \fIMODE\fR variable determines what login mode nanny is in:
whether it is set up for \fIX\fR logins via \fIxlogin\fR or
\fICONSOLE\fR logins via \fIlogin\fR. Other valid modes are
\fINONE\fR, where \fInanny\fR exercises no control over what is
happening on the display, and \fIDEAD\fR, where \fInanny\fR is not
running. \fIMODE\fR may only be set when the socket is secure.
.TP 8
.B XCONSOLE
The \fIXCONSOLE\fR variable determines whether the \fIconsole\fR
program should be running or not. If it is set to \fIOFF\fR, the
console is not running. If \fION\fR, the console is running unless
it suffered an abnormal exit. Setting it to \fION\fR when it is
already on will force an attempt to restart (if the console is not
running) and regrab /dev/console output.
.TP 8
.B USER
\fIUSER\fR, if set, is the username of the person who is or is to be
logged in. It may only be set when the socket is secure; setting it
makes the socket insecure, and \fIchown\fRs the communications socket
to be owned by \fIUSER\fR.
.TP 8
.B LOGGED_IN
This variable determines whether a user is logged in. Typically,
\fIUSER\fR is set by \fIxlogin\fR, and later \fILOGGED_IN\fR is set to
TRUE by \fIelmer\fR, causing nanny to reflect this fact in
\fIutmp\fR. When the user logs out, \fIelmer\fR will set
\fILOGGED_IN\fR to FALSE, causing nanny to remove the entry from
\fIutmp\fR, clear the \fIUSER\fR variable, \fIchown\fR its
communications socket to root, and set the state of the socket to
secure.
.TP 8
.B TTY
This variable contains the name of the device which is connected
to the \fIconsole\fR. \fITTY\fR is read only.
.TP 8
.B REMOVE_USER
This variable indicates whether \fIUSER\fR should be removed from
\fI/etc/passwd\fR when the user logs out.
.TP 8
.B ENV[
This variable has no significance to \fInanny\fR. It is a variable
which is used to communicate environment information between
\fIxlogin\fR and \fIelmer\fR, as they are siblings and therefore the
information cannot be inherited.
.TP 8
.B XSESSION_ARGS[
Similar to \fIENV[\fR, this variable contains the arguments
\fIxlogin\fR sends to \fIelmer\fR so it knows how to invoke the global
\fIxsession\fR.
.TP 8
.B DEBUG
This variable indicates how much debugging information \fInanny\fR
spews through \fIsyslog\fR. Zero is none; five is all.
.SH FILES
.PP
/var/athena/nanny         communications socket
.br
/var/X11/xdm/Xlogin       location of -xup call to nanny
.br
/var/X11/xdm/Xreset       location of -xdown call to nanny
.SH "SEE ALSO"
X(1), xdm(1), xlogin(8), elmer(8), console(8), config_console(1), syslog(3)
.SH AUTHOR
Craig Fields, MIT I/S DCNS
.br
Copyright (c) 1996 Massachusetts Institute of Technology
